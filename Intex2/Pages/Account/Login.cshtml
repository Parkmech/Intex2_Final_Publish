@page
@model LoginModel
<div class="m-1 text-danger" asp-validation-summary="All"></div>

<!-- This view became irrelevant becuase of google sign-in, but essentially users
    can choose where they want to login from. We decided we would only use third party
    authentication so we don't have to store passwords and stuff.-->

<header class="jumbotron my-4 bg-white shadow-sm">


    <form method="post">

        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />

        <div class="row">
            <div class="col-md-6">

                <h1 class="display-3">Login</h1>

                <hr />

                <div class="form-group">
                    <label>UserName:</label>
                    <input class="form-control" asp-for="UserName" />
                </div>

                <br />
                <br />

                <div class="form-group">
                    <label>Password:</label>
                    <input asp-for="Password" type="password" class="form-control" />
                </div>

                <br />
                <hr />

                <div class="justify-content-center">
                    <button type="submit" class="btn btn-primary p-2 m-1">Log In</button>
                </div>
               
          
            </div>

        </div>


        <a class="btn btn-outline-warning p-2 m-1" asp-controller="Google" asp-action="GoogleLogin">Log In With Google</a>


    </form>
 
</header>



@functions {

    public class LoginModel : PageModel
    {
        private SignInManager<IdentityUser> signInManager;

        public LoginModel(SignInManager<IdentityUser> signinMgr)
        {
            signInManager = signinMgr;
        }

        [BindProperty]
        [Required]
        public string UserName { get; set; }

        [BindProperty]
        [Required]
        public string Password { get; set; }

        [BindProperty(SupportsGet = true)]
        public string ReturnUrl { get; set; }

        public async Task<IActionResult> OnPostAsync()
        {

            if (ModelState.IsValid)
            {
                Microsoft.AspNetCore.Identity.SignInResult result =
                    await signInManager.PasswordSignInAsync(UserName, Password,
                        false, false);
                if (result.Succeeded)
                {
                    return Redirect(ReturnUrl ?? "/");
                }
                ModelState.AddModelError("", "Invalid username or password");
            }

            return Page();
        }
    }
}
