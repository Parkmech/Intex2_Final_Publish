@page
@model CreateModel

<!-- All new users are now generated from a google sign in, but you can also use this view to create your
    own users. In actual production it would be deleted, and we would use only third party auth-->

<header class="jumbotron my-4 bg-white shadow-sm">

    <h1 class="display-3">Create New User</h1>

    <form method="post">

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>User Name</label>
                    <input name="UserName" class="form-control" value="@Model.UserName" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Email</label>
                    <input name="Email" class="form-control" value="@Model.Email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label>Password</label>
                    <input name="Email" class="form-control" value="@Model.Password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

            </div>

            <div class="col-md-6">
                <a class="btn btn-info" asp-controller="Google" asp-action="GoogleLogin">Log In With Google</a>
            </div>
        </div>

        <div class="row">
            
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
        <a class="btn btn-secondary" asp-page="list">Back</a>

    </form>

</header>
@functions {
    public class CreateModel : AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;
        public CreateModel(UserManager<IdentityUser> usrManager)
        {
            UserManager = usrManager;
        }
        [BindProperty]
        [Required(ErrorMessage = "Enter a username")]
        public string UserName { get; set; }

        [BindProperty]
        [Required(ErrorMessage = "Enter a email")]
        [EmailAddress]
        public string Email { get; set; }

        [BindProperty]
        [Required(ErrorMessage = "Enter a password")]
        public string Password { get; set; }
        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                IdentityUser user =
                    new IdentityUser { UserName = UserName, Email = Email };

                IdentityResult result =
                    await UserManager.CreateAsync(user, Password);

                if (result.Succeeded)
                {
                    return RedirectToPage("List");
                }
                foreach (IdentityError err in result.Errors)
                {
                    ModelState.AddModelError("", err.Description);
                }
            }
            return Page();
        }
    }
}